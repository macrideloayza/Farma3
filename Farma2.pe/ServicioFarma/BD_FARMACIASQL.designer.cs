#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioFarma
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_FARMACIA")]
	public partial class BD_FARMACIASQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertMEDICAMENTO(MEDICAMENTO instance);
    partial void UpdateMEDICAMENTO(MEDICAMENTO instance);
    partial void DeleteMEDICAMENTO(MEDICAMENTO instance);
    partial void InsertLABORATORIO(LABORATORIO instance);
    partial void UpdateLABORATORIO(LABORATORIO instance);
    partial void DeleteLABORATORIO(LABORATORIO instance);
    partial void InsertMEDICAMENTO_FARMACIA(MEDICAMENTO_FARMACIA instance);
    partial void UpdateMEDICAMENTO_FARMACIA(MEDICAMENTO_FARMACIA instance);
    partial void DeleteMEDICAMENTO_FARMACIA(MEDICAMENTO_FARMACIA instance);
    partial void InsertPERSONA(PERSONA instance);
    partial void UpdatePERSONA(PERSONA instance);
    partial void DeletePERSONA(PERSONA instance);
    partial void InsertPRESENTACION(PRESENTACION instance);
    partial void UpdatePRESENTACION(PRESENTACION instance);
    partial void DeletePRESENTACION(PRESENTACION instance);
    partial void InsertPROMOCION(PROMOCION instance);
    partial void UpdatePROMOCION(PROMOCION instance);
    partial void DeletePROMOCION(PROMOCION instance);
    partial void InsertSINTOMA(SINTOMA instance);
    partial void UpdateSINTOMA(SINTOMA instance);
    partial void DeleteSINTOMA(SINTOMA instance);
    partial void InsertUSUARIO(USUARIO instance);
    partial void UpdateUSUARIO(USUARIO instance);
    partial void DeleteUSUARIO(USUARIO instance);
    partial void InsertADVERTENCIA(ADVERTENCIA instance);
    partial void UpdateADVERTENCIA(ADVERTENCIA instance);
    partial void DeleteADVERTENCIA(ADVERTENCIA instance);
    partial void InsertDISTRITO(DISTRITO instance);
    partial void UpdateDISTRITO(DISTRITO instance);
    partial void DeleteDISTRITO(DISTRITO instance);
    partial void InsertFAVORITO(FAVORITO instance);
    partial void UpdateFAVORITO(FAVORITO instance);
    partial void DeleteFAVORITO(FAVORITO instance);
    partial void InsertFORMA_USO(FORMA_USO instance);
    partial void UpdateFORMA_USO(FORMA_USO instance);
    partial void DeleteFORMA_USO(FORMA_USO instance);
    #endregion
		
		public BD_FARMACIASQLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BD_FARMACIAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BD_FARMACIASQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BD_FARMACIASQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BD_FARMACIASQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BD_FARMACIASQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this.GetTable<MEDICAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<LABORATORIO> LABORATORIO
		{
			get
			{
				return this.GetTable<LABORATORIO>();
			}
		}
		
		public System.Data.Linq.Table<MEDICAMENTO_FARMACIA> MEDICAMENTO_FARMACIA
		{
			get
			{
				return this.GetTable<MEDICAMENTO_FARMACIA>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA> PERSONA
		{
			get
			{
				return this.GetTable<PERSONA>();
			}
		}
		
		public System.Data.Linq.Table<PRESENTACION> PRESENTACION
		{
			get
			{
				return this.GetTable<PRESENTACION>();
			}
		}
		
		public System.Data.Linq.Table<PROMOCION> PROMOCION
		{
			get
			{
				return this.GetTable<PROMOCION>();
			}
		}
		
		public System.Data.Linq.Table<SINTOMA> SINTOMA
		{
			get
			{
				return this.GetTable<SINTOMA>();
			}
		}
		
		public System.Data.Linq.Table<USUARIO> USUARIO
		{
			get
			{
				return this.GetTable<USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<ADVERTENCIA> ADVERTENCIA
		{
			get
			{
				return this.GetTable<ADVERTENCIA>();
			}
		}
		
		public System.Data.Linq.Table<DISTRITO> DISTRITO
		{
			get
			{
				return this.GetTable<DISTRITO>();
			}
		}
		
		public System.Data.Linq.Table<FAVORITO> FAVORITO
		{
			get
			{
				return this.GetTable<FAVORITO>();
			}
		}
		
		public System.Data.Linq.Table<FORMA_USO> FORMA_USO
		{
			get
			{
				return this.GetTable<FORMA_USO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICAMENTO")]
	public partial class MEDICAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MED;
		
		private int _ID_ADV;
		
		private int _ID_FOR;
		
		private int _ID_PRE;
		
		private int _ID_LAB;
		
		private int _ID_SIN;
		
		private string _NOM_MED;
		
		private string _CON_MED;
		
		private EntitySet<MEDICAMENTO_FARMACIA> _MEDICAMENTO_FARMACIA;
		
		private EntitySet<PROMOCION> _PROMOCION;
		
		private EntitySet<FAVORITO> _FAVORITO;
		
		private EntityRef<LABORATORIO> _LABORATORIO;
		
		private EntityRef<PRESENTACION> _PRESENTACION;
		
		private EntityRef<SINTOMA> _SINTOMA;
		
		private EntityRef<ADVERTENCIA> _ADVERTENCIA;
		
		private EntityRef<FORMA_USO> _FORMA_USO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MEDChanging(int value);
    partial void OnID_MEDChanged();
    partial void OnID_ADVChanging(int value);
    partial void OnID_ADVChanged();
    partial void OnID_FORChanging(int value);
    partial void OnID_FORChanged();
    partial void OnID_PREChanging(int value);
    partial void OnID_PREChanged();
    partial void OnID_LABChanging(int value);
    partial void OnID_LABChanged();
    partial void OnID_SINChanging(int value);
    partial void OnID_SINChanged();
    partial void OnNOM_MEDChanging(string value);
    partial void OnNOM_MEDChanged();
    partial void OnCON_MEDChanging(string value);
    partial void OnCON_MEDChanged();
    #endregion
		
		public MEDICAMENTO()
		{
			this._MEDICAMENTO_FARMACIA = new EntitySet<MEDICAMENTO_FARMACIA>(new Action<MEDICAMENTO_FARMACIA>(this.attach_MEDICAMENTO_FARMACIA), new Action<MEDICAMENTO_FARMACIA>(this.detach_MEDICAMENTO_FARMACIA));
			this._PROMOCION = new EntitySet<PROMOCION>(new Action<PROMOCION>(this.attach_PROMOCION), new Action<PROMOCION>(this.detach_PROMOCION));
			this._FAVORITO = new EntitySet<FAVORITO>(new Action<FAVORITO>(this.attach_FAVORITO), new Action<FAVORITO>(this.detach_FAVORITO));
			this._LABORATORIO = default(EntityRef<LABORATORIO>);
			this._PRESENTACION = default(EntityRef<PRESENTACION>);
			this._SINTOMA = default(EntityRef<SINTOMA>);
			this._ADVERTENCIA = default(EntityRef<ADVERTENCIA>);
			this._FORMA_USO = default(EntityRef<FORMA_USO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MED", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MED
		{
			get
			{
				return this._ID_MED;
			}
			set
			{
				if ((this._ID_MED != value))
				{
					this.OnID_MEDChanging(value);
					this.SendPropertyChanging();
					this._ID_MED = value;
					this.SendPropertyChanged("ID_MED");
					this.OnID_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADV", DbType="Int NOT NULL")]
		public int ID_ADV
		{
			get
			{
				return this._ID_ADV;
			}
			set
			{
				if ((this._ID_ADV != value))
				{
					if (this._ADVERTENCIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ADVChanging(value);
					this.SendPropertyChanging();
					this._ID_ADV = value;
					this.SendPropertyChanged("ID_ADV");
					this.OnID_ADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FOR", DbType="Int NOT NULL")]
		public int ID_FOR
		{
			get
			{
				return this._ID_FOR;
			}
			set
			{
				if ((this._ID_FOR != value))
				{
					if (this._FORMA_USO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FORChanging(value);
					this.SendPropertyChanging();
					this._ID_FOR = value;
					this.SendPropertyChanged("ID_FOR");
					this.OnID_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRE", DbType="Int NOT NULL")]
		public int ID_PRE
		{
			get
			{
				return this._ID_PRE;
			}
			set
			{
				if ((this._ID_PRE != value))
				{
					if (this._PRESENTACION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PREChanging(value);
					this.SendPropertyChanging();
					this._ID_PRE = value;
					this.SendPropertyChanged("ID_PRE");
					this.OnID_PREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LAB", DbType="Int NOT NULL")]
		public int ID_LAB
		{
			get
			{
				return this._ID_LAB;
			}
			set
			{
				if ((this._ID_LAB != value))
				{
					if (this._LABORATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LABChanging(value);
					this.SendPropertyChanging();
					this._ID_LAB = value;
					this.SendPropertyChanged("ID_LAB");
					this.OnID_LABChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SIN", DbType="Int NOT NULL")]
		public int ID_SIN
		{
			get
			{
				return this._ID_SIN;
			}
			set
			{
				if ((this._ID_SIN != value))
				{
					if (this._SINTOMA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SINChanging(value);
					this.SendPropertyChanging();
					this._ID_SIN = value;
					this.SendPropertyChanged("ID_SIN");
					this.OnID_SINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_MED", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NOM_MED
		{
			get
			{
				return this._NOM_MED;
			}
			set
			{
				if ((this._NOM_MED != value))
				{
					this.OnNOM_MEDChanging(value);
					this.SendPropertyChanging();
					this._NOM_MED = value;
					this.SendPropertyChanged("NOM_MED");
					this.OnNOM_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CON_MED", DbType="NVarChar(100)")]
		public string CON_MED
		{
			get
			{
				return this._CON_MED;
			}
			set
			{
				if ((this._CON_MED != value))
				{
					this.OnCON_MEDChanging(value);
					this.SendPropertyChanging();
					this._CON_MED = value;
					this.SendPropertyChanged("CON_MED");
					this.OnCON_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_MEDICAMENTO_FARMACIA", Storage="_MEDICAMENTO_FARMACIA", ThisKey="ID_MED", OtherKey="ID_MED")]
		public EntitySet<MEDICAMENTO_FARMACIA> MEDICAMENTO_FARMACIA
		{
			get
			{
				return this._MEDICAMENTO_FARMACIA;
			}
			set
			{
				this._MEDICAMENTO_FARMACIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_PROMOCION", Storage="_PROMOCION", ThisKey="ID_MED", OtherKey="ID_MED")]
		public EntitySet<PROMOCION> PROMOCION
		{
			get
			{
				return this._PROMOCION;
			}
			set
			{
				this._PROMOCION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_FAVORITO", Storage="_FAVORITO", ThisKey="ID_MED", OtherKey="ID_MED")]
		public EntitySet<FAVORITO> FAVORITO
		{
			get
			{
				return this._FAVORITO;
			}
			set
			{
				this._FAVORITO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_MEDICAMENTO", Storage="_LABORATORIO", ThisKey="ID_LAB", OtherKey="ID_LAB", IsForeignKey=true)]
		public LABORATORIO LABORATORIO
		{
			get
			{
				return this._LABORATORIO.Entity;
			}
			set
			{
				LABORATORIO previousValue = this._LABORATORIO.Entity;
				if (((previousValue != value) 
							|| (this._LABORATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LABORATORIO.Entity = null;
						previousValue.MEDICAMENTO.Remove(this);
					}
					this._LABORATORIO.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO.Add(this);
						this._ID_LAB = value.ID_LAB;
					}
					else
					{
						this._ID_LAB = default(int);
					}
					this.SendPropertyChanged("LABORATORIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESENTACION_MEDICAMENTO", Storage="_PRESENTACION", ThisKey="ID_PRE", OtherKey="ID_PRE", IsForeignKey=true)]
		public PRESENTACION PRESENTACION
		{
			get
			{
				return this._PRESENTACION.Entity;
			}
			set
			{
				PRESENTACION previousValue = this._PRESENTACION.Entity;
				if (((previousValue != value) 
							|| (this._PRESENTACION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRESENTACION.Entity = null;
						previousValue.MEDICAMENTO.Remove(this);
					}
					this._PRESENTACION.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO.Add(this);
						this._ID_PRE = value.ID_PRE;
					}
					else
					{
						this._ID_PRE = default(int);
					}
					this.SendPropertyChanged("PRESENTACION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINTOMA_MEDICAMENTO", Storage="_SINTOMA", ThisKey="ID_SIN", OtherKey="ID_SIN", IsForeignKey=true)]
		public SINTOMA SINTOMA
		{
			get
			{
				return this._SINTOMA.Entity;
			}
			set
			{
				SINTOMA previousValue = this._SINTOMA.Entity;
				if (((previousValue != value) 
							|| (this._SINTOMA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINTOMA.Entity = null;
						previousValue.MEDICAMENTO.Remove(this);
					}
					this._SINTOMA.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO.Add(this);
						this._ID_SIN = value.ID_SIN;
					}
					else
					{
						this._ID_SIN = default(int);
					}
					this.SendPropertyChanged("SINTOMA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTENCIA_MEDICAMENTO", Storage="_ADVERTENCIA", ThisKey="ID_ADV", OtherKey="ID_ADV", IsForeignKey=true)]
		public ADVERTENCIA ADVERTENCIA
		{
			get
			{
				return this._ADVERTENCIA.Entity;
			}
			set
			{
				ADVERTENCIA previousValue = this._ADVERTENCIA.Entity;
				if (((previousValue != value) 
							|| (this._ADVERTENCIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADVERTENCIA.Entity = null;
						previousValue.MEDICAMENTO.Remove(this);
					}
					this._ADVERTENCIA.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO.Add(this);
						this._ID_ADV = value.ID_ADV;
					}
					else
					{
						this._ID_ADV = default(int);
					}
					this.SendPropertyChanged("ADVERTENCIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORMA_USO_MEDICAMENTO", Storage="_FORMA_USO", ThisKey="ID_FOR", OtherKey="ID_FOR", IsForeignKey=true)]
		public FORMA_USO FORMA_USO
		{
			get
			{
				return this._FORMA_USO.Entity;
			}
			set
			{
				FORMA_USO previousValue = this._FORMA_USO.Entity;
				if (((previousValue != value) 
							|| (this._FORMA_USO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORMA_USO.Entity = null;
						previousValue.MEDICAMENTO.Remove(this);
					}
					this._FORMA_USO.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO.Add(this);
						this._ID_FOR = value.ID_FOR;
					}
					else
					{
						this._ID_FOR = default(int);
					}
					this.SendPropertyChanged("FORMA_USO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO_FARMACIA(MEDICAMENTO_FARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = this;
		}
		
		private void detach_MEDICAMENTO_FARMACIA(MEDICAMENTO_FARMACIA entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = null;
		}
		
		private void attach_PROMOCION(PROMOCION entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = this;
		}
		
		private void detach_PROMOCION(PROMOCION entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = null;
		}
		
		private void attach_FAVORITO(FAVORITO entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = this;
		}
		
		private void detach_FAVORITO(FAVORITO entity)
		{
			this.SendPropertyChanging();
			entity.MEDICAMENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LABORATORIO")]
	public partial class LABORATORIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LAB;
		
		private string _NOM_LAB;
		
		private EntitySet<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LABChanging(int value);
    partial void OnID_LABChanged();
    partial void OnNOM_LABChanging(string value);
    partial void OnNOM_LABChanged();
    #endregion
		
		public LABORATORIO()
		{
			this._MEDICAMENTO = new EntitySet<MEDICAMENTO>(new Action<MEDICAMENTO>(this.attach_MEDICAMENTO), new Action<MEDICAMENTO>(this.detach_MEDICAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LAB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LAB
		{
			get
			{
				return this._ID_LAB;
			}
			set
			{
				if ((this._ID_LAB != value))
				{
					this.OnID_LABChanging(value);
					this.SendPropertyChanging();
					this._ID_LAB = value;
					this.SendPropertyChanged("ID_LAB");
					this.OnID_LABChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_LAB", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string NOM_LAB
		{
			get
			{
				return this._NOM_LAB;
			}
			set
			{
				if ((this._NOM_LAB != value))
				{
					this.OnNOM_LABChanging(value);
					this.SendPropertyChanging();
					this._NOM_LAB = value;
					this.SendPropertyChanged("NOM_LAB");
					this.OnNOM_LABChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LABORATORIO_MEDICAMENTO", Storage="_MEDICAMENTO", ThisKey="ID_LAB", OtherKey="ID_LAB")]
		public EntitySet<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO;
			}
			set
			{
				this._MEDICAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = this;
		}
		
		private void detach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.LABORATORIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEDICAMENTO_FARMACIA")]
	public partial class MEDICAMENTO_FARMACIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MED;
		
		private int _ID_FAR;
		
		private decimal _PRECIO;
		
		private EntityRef<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MEDChanging(int value);
    partial void OnID_MEDChanged();
    partial void OnID_FARChanging(int value);
    partial void OnID_FARChanged();
    partial void OnPRECIOChanging(decimal value);
    partial void OnPRECIOChanged();
    #endregion
		
		public MEDICAMENTO_FARMACIA()
		{
			this._MEDICAMENTO = default(EntityRef<MEDICAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MED", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MED
		{
			get
			{
				return this._ID_MED;
			}
			set
			{
				if ((this._ID_MED != value))
				{
					if (this._MEDICAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MEDChanging(value);
					this.SendPropertyChanging();
					this._ID_MED = value;
					this.SendPropertyChanged("ID_MED");
					this.OnID_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FAR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_FAR
		{
			get
			{
				return this._ID_FAR;
			}
			set
			{
				if ((this._ID_FAR != value))
				{
					this.OnID_FARChanging(value);
					this.SendPropertyChanging();
					this._ID_FAR = value;
					this.SendPropertyChanged("ID_FAR");
					this.OnID_FARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Money NOT NULL")]
		public decimal PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_MEDICAMENTO_FARMACIA", Storage="_MEDICAMENTO", ThisKey="ID_MED", OtherKey="ID_MED", IsForeignKey=true)]
		public MEDICAMENTO MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO.Entity;
			}
			set
			{
				MEDICAMENTO previousValue = this._MEDICAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTO.Entity = null;
						previousValue.MEDICAMENTO_FARMACIA.Remove(this);
					}
					this._MEDICAMENTO.Entity = value;
					if ((value != null))
					{
						value.MEDICAMENTO_FARMACIA.Add(this);
						this._ID_MED = value.ID_MED;
					}
					else
					{
						this._ID_MED = default(int);
					}
					this.SendPropertyChanged("MEDICAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA")]
	public partial class PERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PER_ID;
		
		private int _ID_USU;
		
		private string _NOM_PER;
		
		private string _APEP_PER;
		
		private string _APEM_PER;
		
		private System.Nullable<System.DateTime> _FNAC_PER;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPER_IDChanging(int value);
    partial void OnPER_IDChanged();
    partial void OnID_USUChanging(int value);
    partial void OnID_USUChanged();
    partial void OnNOM_PERChanging(string value);
    partial void OnNOM_PERChanged();
    partial void OnAPEP_PERChanging(string value);
    partial void OnAPEP_PERChanged();
    partial void OnAPEM_PERChanging(string value);
    partial void OnAPEM_PERChanged();
    partial void OnFNAC_PERChanging(System.Nullable<System.DateTime> value);
    partial void OnFNAC_PERChanged();
    #endregion
		
		public PERSONA()
		{
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PER_ID
		{
			get
			{
				return this._PER_ID;
			}
			set
			{
				if ((this._PER_ID != value))
				{
					this.OnPER_IDChanging(value);
					this.SendPropertyChanging();
					this._PER_ID = value;
					this.SendPropertyChanged("PER_ID");
					this.OnPER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USU", DbType="Int NOT NULL")]
		public int ID_USU
		{
			get
			{
				return this._ID_USU;
			}
			set
			{
				if ((this._ID_USU != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USUChanging(value);
					this.SendPropertyChanging();
					this._ID_USU = value;
					this.SendPropertyChanged("ID_USU");
					this.OnID_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_PER", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string NOM_PER
		{
			get
			{
				return this._NOM_PER;
			}
			set
			{
				if ((this._NOM_PER != value))
				{
					this.OnNOM_PERChanging(value);
					this.SendPropertyChanging();
					this._NOM_PER = value;
					this.SendPropertyChanged("NOM_PER");
					this.OnNOM_PERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APEP_PER", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string APEP_PER
		{
			get
			{
				return this._APEP_PER;
			}
			set
			{
				if ((this._APEP_PER != value))
				{
					this.OnAPEP_PERChanging(value);
					this.SendPropertyChanging();
					this._APEP_PER = value;
					this.SendPropertyChanged("APEP_PER");
					this.OnAPEP_PERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APEM_PER", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string APEM_PER
		{
			get
			{
				return this._APEM_PER;
			}
			set
			{
				if ((this._APEM_PER != value))
				{
					this.OnAPEM_PERChanging(value);
					this.SendPropertyChanging();
					this._APEM_PER = value;
					this.SendPropertyChanged("APEM_PER");
					this.OnAPEM_PERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FNAC_PER", DbType="DateTime")]
		public System.Nullable<System.DateTime> FNAC_PER
		{
			get
			{
				return this._FNAC_PER;
			}
			set
			{
				if ((this._FNAC_PER != value))
				{
					this.OnFNAC_PERChanging(value);
					this.SendPropertyChanging();
					this._FNAC_PER = value;
					this.SendPropertyChanged("FNAC_PER");
					this.OnFNAC_PERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PERSONA", Storage="_USUARIO", ThisKey="ID_USU", OtherKey="ID_USU", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.PERSONA.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.PERSONA.Add(this);
						this._ID_USU = value.ID_USU;
					}
					else
					{
						this._ID_USU = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRESENTACION")]
	public partial class PRESENTACION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PRE;
		
		private string _DES_PRE;
		
		private EntitySet<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PREChanging(int value);
    partial void OnID_PREChanged();
    partial void OnDES_PREChanging(string value);
    partial void OnDES_PREChanged();
    #endregion
		
		public PRESENTACION()
		{
			this._MEDICAMENTO = new EntitySet<MEDICAMENTO>(new Action<MEDICAMENTO>(this.attach_MEDICAMENTO), new Action<MEDICAMENTO>(this.detach_MEDICAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PRE
		{
			get
			{
				return this._ID_PRE;
			}
			set
			{
				if ((this._ID_PRE != value))
				{
					this.OnID_PREChanging(value);
					this.SendPropertyChanging();
					this._ID_PRE = value;
					this.SendPropertyChanged("ID_PRE");
					this.OnID_PREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_PRE", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DES_PRE
		{
			get
			{
				return this._DES_PRE;
			}
			set
			{
				if ((this._DES_PRE != value))
				{
					this.OnDES_PREChanging(value);
					this.SendPropertyChanging();
					this._DES_PRE = value;
					this.SendPropertyChanged("DES_PRE");
					this.OnDES_PREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESENTACION_MEDICAMENTO", Storage="_MEDICAMENTO", ThisKey="ID_PRE", OtherKey="ID_PRE")]
		public EntitySet<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO;
			}
			set
			{
				this._MEDICAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.PRESENTACION = this;
		}
		
		private void detach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.PRESENTACION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROMOCION")]
	public partial class PROMOCION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PRO;
		
		private int _ID_MED;
		
		private int _ID_FAR;
		
		private string _DES_PRO;
		
		private EntityRef<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PROChanging(int value);
    partial void OnID_PROChanged();
    partial void OnID_MEDChanging(int value);
    partial void OnID_MEDChanged();
    partial void OnID_FARChanging(int value);
    partial void OnID_FARChanged();
    partial void OnDES_PROChanging(string value);
    partial void OnDES_PROChanged();
    #endregion
		
		public PROMOCION()
		{
			this._MEDICAMENTO = default(EntityRef<MEDICAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PRO
		{
			get
			{
				return this._ID_PRO;
			}
			set
			{
				if ((this._ID_PRO != value))
				{
					this.OnID_PROChanging(value);
					this.SendPropertyChanging();
					this._ID_PRO = value;
					this.SendPropertyChanged("ID_PRO");
					this.OnID_PROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MED", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MED
		{
			get
			{
				return this._ID_MED;
			}
			set
			{
				if ((this._ID_MED != value))
				{
					if (this._MEDICAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MEDChanging(value);
					this.SendPropertyChanging();
					this._ID_MED = value;
					this.SendPropertyChanged("ID_MED");
					this.OnID_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FAR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_FAR
		{
			get
			{
				return this._ID_FAR;
			}
			set
			{
				if ((this._ID_FAR != value))
				{
					this.OnID_FARChanging(value);
					this.SendPropertyChanging();
					this._ID_FAR = value;
					this.SendPropertyChanged("ID_FAR");
					this.OnID_FARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_PRO", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string DES_PRO
		{
			get
			{
				return this._DES_PRO;
			}
			set
			{
				if ((this._DES_PRO != value))
				{
					this.OnDES_PROChanging(value);
					this.SendPropertyChanging();
					this._DES_PRO = value;
					this.SendPropertyChanged("DES_PRO");
					this.OnDES_PROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_PROMOCION", Storage="_MEDICAMENTO", ThisKey="ID_MED", OtherKey="ID_MED", IsForeignKey=true)]
		public MEDICAMENTO MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO.Entity;
			}
			set
			{
				MEDICAMENTO previousValue = this._MEDICAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTO.Entity = null;
						previousValue.PROMOCION.Remove(this);
					}
					this._MEDICAMENTO.Entity = value;
					if ((value != null))
					{
						value.PROMOCION.Add(this);
						this._ID_MED = value.ID_MED;
					}
					else
					{
						this._ID_MED = default(int);
					}
					this.SendPropertyChanged("MEDICAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINTOMA")]
	public partial class SINTOMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SIN;
		
		private string _DES_SIN;
		
		private EntitySet<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SINChanging(int value);
    partial void OnID_SINChanged();
    partial void OnDES_SINChanging(string value);
    partial void OnDES_SINChanged();
    #endregion
		
		public SINTOMA()
		{
			this._MEDICAMENTO = new EntitySet<MEDICAMENTO>(new Action<MEDICAMENTO>(this.attach_MEDICAMENTO), new Action<MEDICAMENTO>(this.detach_MEDICAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SIN
		{
			get
			{
				return this._ID_SIN;
			}
			set
			{
				if ((this._ID_SIN != value))
				{
					this.OnID_SINChanging(value);
					this.SendPropertyChanging();
					this._ID_SIN = value;
					this.SendPropertyChanged("ID_SIN");
					this.OnID_SINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_SIN", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DES_SIN
		{
			get
			{
				return this._DES_SIN;
			}
			set
			{
				if ((this._DES_SIN != value))
				{
					this.OnDES_SINChanging(value);
					this.SendPropertyChanging();
					this._DES_SIN = value;
					this.SendPropertyChanged("DES_SIN");
					this.OnDES_SINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINTOMA_MEDICAMENTO", Storage="_MEDICAMENTO", ThisKey="ID_SIN", OtherKey="ID_SIN")]
		public EntitySet<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO;
			}
			set
			{
				this._MEDICAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SINTOMA = this;
		}
		
		private void detach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SINTOMA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIO")]
	public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_USU;
		
		private string _NOM_USU;
		
		private string _PASS_USU;
		
		private string _CORREO_USU;
		
		private EntitySet<PERSONA> _PERSONA;
		
		private EntitySet<FAVORITO> _FAVORITO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USUChanging(int value);
    partial void OnID_USUChanged();
    partial void OnNOM_USUChanging(string value);
    partial void OnNOM_USUChanged();
    partial void OnPASS_USUChanging(string value);
    partial void OnPASS_USUChanged();
    partial void OnCORREO_USUChanging(string value);
    partial void OnCORREO_USUChanged();
    #endregion
		
		public USUARIO()
		{
			this._PERSONA = new EntitySet<PERSONA>(new Action<PERSONA>(this.attach_PERSONA), new Action<PERSONA>(this.detach_PERSONA));
			this._FAVORITO = new EntitySet<FAVORITO>(new Action<FAVORITO>(this.attach_FAVORITO), new Action<FAVORITO>(this.detach_FAVORITO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_USU
		{
			get
			{
				return this._ID_USU;
			}
			set
			{
				if ((this._ID_USU != value))
				{
					this.OnID_USUChanging(value);
					this.SendPropertyChanging();
					this._ID_USU = value;
					this.SendPropertyChanged("ID_USU");
					this.OnID_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_USU", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string NOM_USU
		{
			get
			{
				return this._NOM_USU;
			}
			set
			{
				if ((this._NOM_USU != value))
				{
					this.OnNOM_USUChanging(value);
					this.SendPropertyChanging();
					this._NOM_USU = value;
					this.SendPropertyChanged("NOM_USU");
					this.OnNOM_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASS_USU", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string PASS_USU
		{
			get
			{
				return this._PASS_USU;
			}
			set
			{
				if ((this._PASS_USU != value))
				{
					this.OnPASS_USUChanging(value);
					this.SendPropertyChanging();
					this._PASS_USU = value;
					this.SendPropertyChanged("PASS_USU");
					this.OnPASS_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CORREO_USU", DbType="NVarChar(150)")]
		public string CORREO_USU
		{
			get
			{
				return this._CORREO_USU;
			}
			set
			{
				if ((this._CORREO_USU != value))
				{
					this.OnCORREO_USUChanging(value);
					this.SendPropertyChanging();
					this._CORREO_USU = value;
					this.SendPropertyChanged("CORREO_USU");
					this.OnCORREO_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PERSONA", Storage="_PERSONA", ThisKey="ID_USU", OtherKey="ID_USU")]
		public EntitySet<PERSONA> PERSONA
		{
			get
			{
				return this._PERSONA;
			}
			set
			{
				this._PERSONA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_FAVORITO", Storage="_FAVORITO", ThisKey="ID_USU", OtherKey="ID_USU")]
		public EntitySet<FAVORITO> FAVORITO
		{
			get
			{
				return this._FAVORITO;
			}
			set
			{
				this._FAVORITO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERSONA(PERSONA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_PERSONA(PERSONA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_FAVORITO(FAVORITO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_FAVORITO(FAVORITO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADVERTENCIA")]
	public partial class ADVERTENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ADV;
		
		private string _DES_ADV;
		
		private EntitySet<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ADVChanging(int value);
    partial void OnID_ADVChanged();
    partial void OnDES_ADVChanging(string value);
    partial void OnDES_ADVChanged();
    #endregion
		
		public ADVERTENCIA()
		{
			this._MEDICAMENTO = new EntitySet<MEDICAMENTO>(new Action<MEDICAMENTO>(this.attach_MEDICAMENTO), new Action<MEDICAMENTO>(this.detach_MEDICAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ADV
		{
			get
			{
				return this._ID_ADV;
			}
			set
			{
				if ((this._ID_ADV != value))
				{
					this.OnID_ADVChanging(value);
					this.SendPropertyChanging();
					this._ID_ADV = value;
					this.SendPropertyChanged("ID_ADV");
					this.OnID_ADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_ADV", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string DES_ADV
		{
			get
			{
				return this._DES_ADV;
			}
			set
			{
				if ((this._DES_ADV != value))
				{
					this.OnDES_ADVChanging(value);
					this.SendPropertyChanging();
					this._DES_ADV = value;
					this.SendPropertyChanged("DES_ADV");
					this.OnDES_ADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTENCIA_MEDICAMENTO", Storage="_MEDICAMENTO", ThisKey="ID_ADV", OtherKey="ID_ADV")]
		public EntitySet<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO;
			}
			set
			{
				this._MEDICAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ADVERTENCIA = this;
		}
		
		private void detach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.ADVERTENCIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISTRITO")]
	public partial class DISTRITO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DIS;
		
		private string _DES_DIS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DISChanging(int value);
    partial void OnID_DISChanged();
    partial void OnDES_DISChanging(string value);
    partial void OnDES_DISChanged();
    #endregion
		
		public DISTRITO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DIS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DIS
		{
			get
			{
				return this._ID_DIS;
			}
			set
			{
				if ((this._ID_DIS != value))
				{
					this.OnID_DISChanging(value);
					this.SendPropertyChanging();
					this._ID_DIS = value;
					this.SendPropertyChanged("ID_DIS");
					this.OnID_DISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_DIS", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DES_DIS
		{
			get
			{
				return this._DES_DIS;
			}
			set
			{
				if ((this._DES_DIS != value))
				{
					this.OnDES_DISChanging(value);
					this.SendPropertyChanging();
					this._DES_DIS = value;
					this.SendPropertyChanged("DES_DIS");
					this.OnDES_DISChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAVORITO")]
	public partial class FAVORITO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_FAV;
		
		private int _ID_MED;
		
		private int _ID_USU;
		
		private EntityRef<MEDICAMENTO> _MEDICAMENTO;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FAVChanging(int value);
    partial void OnID_FAVChanged();
    partial void OnID_MEDChanging(int value);
    partial void OnID_MEDChanged();
    partial void OnID_USUChanging(int value);
    partial void OnID_USUChanged();
    #endregion
		
		public FAVORITO()
		{
			this._MEDICAMENTO = default(EntityRef<MEDICAMENTO>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FAV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_FAV
		{
			get
			{
				return this._ID_FAV;
			}
			set
			{
				if ((this._ID_FAV != value))
				{
					this.OnID_FAVChanging(value);
					this.SendPropertyChanging();
					this._ID_FAV = value;
					this.SendPropertyChanged("ID_FAV");
					this.OnID_FAVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MED", DbType="Int NOT NULL")]
		public int ID_MED
		{
			get
			{
				return this._ID_MED;
			}
			set
			{
				if ((this._ID_MED != value))
				{
					if (this._MEDICAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MEDChanging(value);
					this.SendPropertyChanging();
					this._ID_MED = value;
					this.SendPropertyChanged("ID_MED");
					this.OnID_MEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USU", DbType="Int NOT NULL")]
		public int ID_USU
		{
			get
			{
				return this._ID_USU;
			}
			set
			{
				if ((this._ID_USU != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USUChanging(value);
					this.SendPropertyChanging();
					this._ID_USU = value;
					this.SendPropertyChanged("ID_USU");
					this.OnID_USUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEDICAMENTO_FAVORITO", Storage="_MEDICAMENTO", ThisKey="ID_MED", OtherKey="ID_MED", IsForeignKey=true)]
		public MEDICAMENTO MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO.Entity;
			}
			set
			{
				MEDICAMENTO previousValue = this._MEDICAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._MEDICAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEDICAMENTO.Entity = null;
						previousValue.FAVORITO.Remove(this);
					}
					this._MEDICAMENTO.Entity = value;
					if ((value != null))
					{
						value.FAVORITO.Add(this);
						this._ID_MED = value.ID_MED;
					}
					else
					{
						this._ID_MED = default(int);
					}
					this.SendPropertyChanged("MEDICAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_FAVORITO", Storage="_USUARIO", ThisKey="ID_USU", OtherKey="ID_USU", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.FAVORITO.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.FAVORITO.Add(this);
						this._ID_USU = value.ID_USU;
					}
					else
					{
						this._ID_USU = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORMA_USO")]
	public partial class FORMA_USO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_FOR;
		
		private string _DES_FOR;
		
		private EntitySet<MEDICAMENTO> _MEDICAMENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FORChanging(int value);
    partial void OnID_FORChanged();
    partial void OnDES_FORChanging(string value);
    partial void OnDES_FORChanged();
    #endregion
		
		public FORMA_USO()
		{
			this._MEDICAMENTO = new EntitySet<MEDICAMENTO>(new Action<MEDICAMENTO>(this.attach_MEDICAMENTO), new Action<MEDICAMENTO>(this.detach_MEDICAMENTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_FOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_FOR
		{
			get
			{
				return this._ID_FOR;
			}
			set
			{
				if ((this._ID_FOR != value))
				{
					this.OnID_FORChanging(value);
					this.SendPropertyChanging();
					this._ID_FOR = value;
					this.SendPropertyChanged("ID_FOR");
					this.OnID_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DES_FOR", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string DES_FOR
		{
			get
			{
				return this._DES_FOR;
			}
			set
			{
				if ((this._DES_FOR != value))
				{
					this.OnDES_FORChanging(value);
					this.SendPropertyChanging();
					this._DES_FOR = value;
					this.SendPropertyChanged("DES_FOR");
					this.OnDES_FORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORMA_USO_MEDICAMENTO", Storage="_MEDICAMENTO", ThisKey="ID_FOR", OtherKey="ID_FOR")]
		public EntitySet<MEDICAMENTO> MEDICAMENTO
		{
			get
			{
				return this._MEDICAMENTO;
			}
			set
			{
				this._MEDICAMENTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.FORMA_USO = this;
		}
		
		private void detach_MEDICAMENTO(MEDICAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.FORMA_USO = null;
		}
	}
}
#pragma warning restore 1591
